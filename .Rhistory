install.packages("knitr")
library("ggplot2")
library(readxl)
library(tidyverse)
library("ggplot2")
library(readxl)
library(tidyverse)
library("ggplot2")
library(readxl)
library(tidyverse)
library(dplyr)
library(lubridate)
library(readr)
library(dplyr)
library(lubridate)
library(readr)
library(dplyr)
library(lubridate)
library(readr)
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx") embedded R code chunks within the document.
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx") embedded R code chunks within the document.
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx") embedded R code chunks within the document.
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx") embedded R code chunks within the document.
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx") embedded R code chunks within the document.
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
## Slide with Bullets
HQTest <- HQTest%>%
#HQTest <- HQTest %>%
mutate(EmrID = EmrID + 5,  # Adding 5 to EmrID column
Surname = toupper(Surname),  # Convert Surname to uppercase
Age = floor(interval(`Birth date`, today()) / years(1)))  # Calculate age from birthdate
## Slide with Bullets
HQTest <- HQTest%>%
# If I wanted to Add 5+ on EmrID column:
mutate(EmrID = EmrID + 5,
##Changing the Surname column to uppercase
Surname = toupper(Surname),
#Adding a column for age using their birth date until today
Age = floor(interval(`Birth date`, today()) / years(1)))
HQTest <- HQTest%>%
# If I wanted to Add 5+ on EmrID column:
mutate(EmrID = EmrID + 5,
##Changing the Surname column to uppercase
Surname = toupper(Surname),
#Adding a column for age using their birth date until today
Age = floor(interval(`Birth date`, today()) / years(1)))
pdf("thisPlot.pdf")
pdf("thisPlot.pdf")
pdf("thisPlot.pdf")
pdf("thisPlot.pdf")
pdf("thisPlot.pdf")
pdf("thisPlot.pdf")
##  aes(x = age) maps the age variable to the x-axis.
ggplot(HQTest, aes(x = HQTest$Age)) +
##  geom_histogram(binwidth = 5) creates the histogram, with a bin width of 5 years
geom_histogram(binwidth = 5,
##  fill = "skyblue" and color = "black" set the bar color and outline.
fill = "skyblue", color = "black") +
##  labs() adds a title and labels for the x and y axes.
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
##  theme_minimal() gives a clean, minimal background to the plot.
theme_minimal()
pdf("thisPlot.pdf")
##  aes(x = age) maps the age variable to the x-axis.
ggplot(HQTest, aes(x = HQTest$Age)) +
##  geom_histogram(binwidth = 5) creates the histogram, with a bin width of 5 years
geom_histogram(binwidth = 5,
##  fill = "skyblue" and color = "black" set the bar color and outline.
fill = "skyblue", color = "black") +
##  labs() adds a title and labels for the x and y axes.
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
##  theme_minimal() gives a clean, minimal background to the plot.
theme_minimal()
pdf("thisPlot.pdf")
HQTest <- HQTest%>%
# If I wanted to Add 5+ on EmrID column:
mutate(EmrID = EmrID + 5,
##Changing the Surname column to uppercase
Surname = toupper(Surname),
#Adding a column for age using their birth date until today
Age = floor(interval(`Birth date`, today()) / years(1)))
pdf("thisPlot.pdf")
df("thisPlot.pdf")
pdf("thisPlot.pdf")
pdf("thisPlot.pdf")
##  aes(x = age) maps the age variable to the x-axis.
ggplot(HQTest, aes(x = HQTest$Age)) +
##  geom_histogram(binwidth = 5) creates the histogram, with a bin width of 5 years
geom_histogram(binwidth = 5,
##  fill = "skyblue" and color = "black" set the bar color and outline.
fill = "skyblue", color = "black") +
##  labs() adds a title and labels for the x and y axes.
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
##  theme_minimal() gives a clean, minimal background to the plot.
theme_minimal()
##  aes(x = age) maps the age variable to the x-axis.
ggplot(HQTest, aes(x = HQTest$Age)) +
##  geom_histogram(binwidth = 5) creates the histogram, with a bin width of 5 years
geom_histogram(binwidth = 5,
##  fill = "skyblue" and color = "black" set the bar color and outline.
fill = "skyblue", color = "black") +
##  labs() adds a title and labels for the x and y axes.
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
##  theme_minimal() gives a clean, minimal background to the plot.
theme_minimal()
pdf("thisPlot.pdf")
pdf("thisPlot.pdf")
pdf("thisPlot.pdf")
pdf("thisPlot.pdf")
dev.off()
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
HQTest <- HQTest%>%
# If I wanted to Add 5+ on EmrID column:
mutate(EmrID = EmrID + 5,
##Changing the Surname column to uppercase
Surname = toupper(Surname),
#Adding a column for age using their birth date until today
Age = floor(interval(`Birth date`, today()) / years(1)))
HQTest <- HQTest%>%
# If I wanted to Add 5+ on EmrID column:
mutate(EmrID = EmrID + 5,
##Changing the Surname column to uppercase
Surname = toupper(Surname),
#Adding a column for age using their birth date until today
Age = floor(interval(`Birth date`, today()) / years(1)))
HQTest <- HQTest%>%
# If I wanted to Add 5+ on EmrID column:
mutate(EmrID = EmrID + 5,
##Changing the Surname column to uppercase
Surname = toupper(Surname),
#Adding a column for age using their birth date until today
Age = floor(interval(`Birth date`, today()) / years(1)))
##  aes(x = age) maps the age variable to the x-axis.
ggplot(HQTest, aes(x = HQTest$Age)) +
##  geom_histogram(binwidth = 5) creates the histogram, with a bin width of 5 years
geom_histogram(binwidth = 5,
##  fill = "skyblue" and color = "black" set the bar color and outline.
fill = "skyblue", color = "black") +
##  labs() adds a title and labels for the x and y axes.
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
##  theme_minimal() gives a clean, minimal background to the plot.
theme_minimal()
pdf("thisPlot.pdf")
##  aes(x = age) maps the age variable to the x-axis.
ggplot(HQTest, aes(x = HQTest$Age)) +
##  geom_histogram(binwidth = 5) creates the histogram, with a bin width of 5 years
geom_histogram(binwidth = 5,
##  fill = "skyblue" and color = "black" set the bar color and outline.
fill = "skyblue", color = "black") +
##  labs() adds a title and labels for the x and y axes.
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
##  theme_minimal() gives a clean, minimal background to the plot.
theme_minimal()
dev.off()
dev.off()
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
# Create a new column for year and month
HQTest <- HQTest %>%
mutate(year_month = floor_date(VisitDate, "month"))
# Create the histogram plot
ggplot(data_summary, aes(x = year_month, y = visits)) +
geom_bar (stat = "identity", fill = "skyblue", color = "black") +
labs(title = "Number of Visits Per Month", y = "Number of Visists") +
theme_minimal() +
scale_x_date(date_labels = "%Y-%m", date_breaks = "1 month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
pressure
View(HQTest)
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
Plot(HQTest$EmrID, HQTest$Date)
knitr::opts_chunk$set(echo = FALSE)
## R Markdown
library("ggplot2")
library(readxl)
library(tidyverse)
library(dplyr)
library(lubridate)
library(readr)
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
HQTest <- HQTest%>%
# If I wanted to Add 5+ on EmrID column:
mutate(EmrID = EmrID + 5,
##Changing the Surname column to uppercase
Surname = toupper(Surname),
#Adding a column for age using their birth date until today
Age = floor(interval(`Birth date`, today()) / years(1)))
# Creating the Age Histogram
plot(HQTest$EmrID, HQTest$Date)
# Load necessary libraries
library(ggplot2)
# Load necessary libraries
library(ggplot2)
markdown
# Load necessary libraries
library(ggplot2)
# Load necessary libraries
library(ggplot2)
# Create the Age Histo
# Load necessary libraries
library(ggplot2)
# Create the Age Histogram
ggplot(HQTest, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
theme_minimal()
# Loading your data (if needed)
HQTest <- read.csv("HQTest")
# Load necessary libraries
library(ggplot2)
# Create the Age Histogram
ggplot(HQTest, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
theme_minimal()
# Loading your data (if needed)
HQTest <- read.csv("HQTest")
---
title: "Demographics-PowerPoint"
---
title: "Demographics-PowerPoint"
---
title: "Demographics-PowerPoint"
---
title: "Demographics-PowerPoint"
(ggplot2)
(ggplot2)
---
title: "Demographics-PowerPoint"
library(ggplot2)
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
library(ggplot2)
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
This slide shows a histogram of ages from the `HQTest` dataset.
# Load necessary libraries
library(ggplot2)
# Load necessary libraries
library(ggplot2)
# Loading your data (if needed)
HQTest <- read.csv("HQTest")
# Create the Age Histogram
ggplot(HQTest, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
theme_minimal()
# Create the Age Histogram
ggplot(HQTest, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
theme_minimal()
# Loading your data (if needed)
HQTest <- read.csv("HQTest")
# Create the Age Histogram
ggplot(HQTest, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Histogram of Ages", x = "Age", y = "Frequency") +
theme_minimal()
# Loading your data (if needed)
HQTest <- read.csv("HQTest")
# Loading your data (if needed)
HQTest <- read.csv("HQTest")
# Load necessary libraries
library(ggplot2)
# Loading your data (if needed)
HQTest <- read.csv("HQTest")
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
# Loading your data (if needed)
HQTest <- read.csv("HQTest")
# Load necessary library
library(ggplot2)
# Load necessary library
library(ggplot2)
# Load necessary library
library(ggplot2)
# Load your dataset
HQTest <- read.csv("C:/Users/YourName/Documents/HQTest.csv")  # Update the path to your CSV file
# Load necessary library
library(ggplot2)
# Load your dataset
HQTest <- read.csv("C:/Users/YourName/Documents/HQTest.csv")  # Update the path to your CSV file
# Load necessary library
library(ggplot2)
# Load your dataset
HQTest <- read.csv("C:/Users/YourName/Documents/HQTest.csv")  # Update the path to your CSV file
# Load necessary library
library(ggplot2)
# Load your dataset
HQTest <- read.csv("C:/Users/YourName/Documents/HQTest.csv")  # Update the path to your CSV file
# Load necessary library
library(ggplot2)
# Load your dataset
HQTest <- read.csv("C:/Users/YourName/Documents/HQTest.csv")  # Update the path to your CSV file
# Load necessary library
library(ggplot2)
# Load your dataset
HQTest <- read.csv("C:/Users/YourName/Documents/HQTest.csv")  # Update the path to your CSV file
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
library(ggplot2)
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
# generate plot
library(corrplot)
---
title: "Demographics-PowerPoint"
install (corrplot)
library("ggplot2")
library(readxl)
library(tidyverse)
library("ggplot2")
library(readxl)
library(tidyverse)
library("ggplot2")
library(readxl)
library(tidyverse)
library(dplyr)
library(lubridate)
library(readr)
library("ggplot2")
library(readxl)
library(tidyverse)
library(dplyr)
library(lubridate)
library(readr)
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
HQTest <- HQTest%>%
# If I wanted to Add 5+ on EmrID column:
mutate(EmrID = EmrID + 5,
##Changing the Surname column to uppercase
Surname = toupper(Surname),
#Adding a column for age using their birth date until today
Age = floor(interval(`Birth date`, today()) / years(1)))
```
```
---
title: "Testing PPT second"
# Load the data
HQTest <- read_excel("DemographicsHQTEST.xlsx")
HQTest <- HQTest%>%
# If I wanted to Add 5+ on EmrID column:
mutate(EmrID = EmrID + 5,
##Changing the Surname column to uppercase
Surname = toupper(Surname),
#Adding a column for age using their birth date until today
Age = floor(interval(`Birth date`, today()) / years(1)))
